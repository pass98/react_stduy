{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\gjaischool\\\\Documents\\\\GitHub\\\\react-master\\\\01.basic\\\\src\\\\App.js\";\nimport logo from './logo.svg';\nimport './App.css';\n\n/*\n  shift + alt + f : 코드정렬 단축키\n\n  JSX 문법\n   - HTML과 JS를 하나의 파일에 작성할 수 있는 문법\n\n  JSX문법의 특징\n  1. 반드시 하나의 부모요소가 있어야한다! 반드시 하나의 부모요소의 여러개의 내용을 집어넣는 것만이 허용 가능하다.\n    + 꼭 <div>가 아니어도 된다!\n\n  2. 표현식을 사용할 수 있다.\n\n  & if문이나 변수등의 값을 사용할 수 없음.\n   2-1. 조건식이 하나일 때  --&&연산자 활용\n   2-2. 조건식이 두개일 때 - 삼항연산자 활용\n   2-3. 조건식이 세 개일때 - return문 위에 조건식을 만든 후 결과값만 {}에 넣어준다.\n  \n   \n  3. 기존 html문법과 다른 점\n    3-1. class 속성 -> className 속성\n    3-2. HTML 문법을 사용할 때 반드시 소문자로 작성\n    3-3. HTML문법 내 내용이 없어도 끝내그는 반드시 작성해야함.\n    3-4. onclick 속성 -> onClick 속성 (Click이 대문자) \n\n  4.스타일 적용\n    4-1. css파일 내 스타일 정의\n    4-2. 객체형태로 정의\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  let a = 'a';\n  let msg = 'Hello React!';\n  let isLogin = true;\n  let name = '임승환';\n  let text = '';\n  if (name === '선영표') {\n    text = 'Front-end';\n  } else if (name === '임승환') {\n    text = 'Back-end';\n  } else {\n    text = 'DB';\n  }\n  const styled_1 = {\n    color: \"green\"\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"item\",\n      children: \"Hello React!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hello React!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: msg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), isLogin && \"환영합니다~!\", name === '임명진' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD658\\uC601\\uD569\\uB2C8\\uB2E4~!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC774\\uC6A9\\uD560 \\uC218 \\uC5C6\\uC2B5\\uB2C8\\uB2E4..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), text, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => alert(\"마우스를클릭실행!\"),\n        children: \"\\uD074\\uB9AD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","jsxDEV","_jsxDEV","App","a","msg","isLogin","name","text","styled_1","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","alert","_c","$RefreshReg$"],"sources":["C:/Users/gjaischool/Documents/GitHub/react-master/01.basic/src/App.js"],"sourcesContent":["import logo from './logo.svg'\nimport './App.css'\n\n/*\n  shift + alt + f : 코드정렬 단축키\n\n  JSX 문법\n   - HTML과 JS를 하나의 파일에 작성할 수 있는 문법\n\n  JSX문법의 특징\n  1. 반드시 하나의 부모요소가 있어야한다! 반드시 하나의 부모요소의 여러개의 내용을 집어넣는 것만이 허용 가능하다.\n    + 꼭 <div>가 아니어도 된다!\n\n  2. 표현식을 사용할 수 있다.\n\n  & if문이나 변수등의 값을 사용할 수 없음.\n   2-1. 조건식이 하나일 때  --&&연산자 활용\n   2-2. 조건식이 두개일 때 - 삼항연산자 활용\n   2-3. 조건식이 세 개일때 - return문 위에 조건식을 만든 후 결과값만 {}에 넣어준다.\n  \n   \n  3. 기존 html문법과 다른 점\n    3-1. class 속성 -> className 속성\n    3-2. HTML 문법을 사용할 때 반드시 소문자로 작성\n    3-3. HTML문법 내 내용이 없어도 끝내그는 반드시 작성해야함.\n    3-4. onclick 속성 -> onClick 속성 (Click이 대문자) \n\n  4.스타일 적용\n    4-1. css파일 내 스타일 정의\n    4-2. 객체형태로 정의\n*/\n\nfunction App() {\n  let a = 'a'\n  let msg = 'Hello React!'\n  let isLogin = true\n  let name = '임승환'\n\n  let text = ''\n\n  if(name === '선영표'){\n    text = 'Front-end'\n  }else if(name === '임승환'){\n    text = 'Back-end'\n  }else{\n    text = 'DB'\n  }\n\n  const styled_1 = {\n    color : \"green\"\n  }\n\n  return (\n    <div className =\"container\">\n      <div className=\"item\">Hello React!</div>\n      <div>Hello React!</div>\n      <div>{msg}</div>\n\n      {/* 조건부 렌더링 */}\n      {/* 판별식이 하나일 때 */}\n      {isLogin && \"환영합니다~!\"}\n\n\n      {/* 조건식이 두개일 때 */}\n      {/* 조건식이 두개일때는 - 삼항연산자를 사용해서 구분한다.*/ }\n      {name==='임명진'?\n      <p>환영합니다~!</p>:\n      <p>이용할 수 없습니다..</p>}\n\n      {/* 조건식이 세개일 때 리턴문 위에 조건값을 만들고 결과만 출력하는 형태 */}\n      {text}\n\n      <p><button onClick={()=>alert(\"마우스를클릭실행!\")}>클릭</button></p>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;;AAElB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BA,SAAAC,MAAA,IAAAC,OAAA;AA6BA,SAASC,GAAGA,CAAA,EAAG;EACb,IAAIC,CAAC,GAAG,GAAG;EACX,IAAIC,GAAG,GAAG,cAAc;EACxB,IAAIC,OAAO,GAAG,IAAI;EAClB,IAAIC,IAAI,GAAG,KAAK;EAEhB,IAAIC,IAAI,GAAG,EAAE;EAEb,IAAGD,IAAI,KAAK,KAAK,EAAC;IAChBC,IAAI,GAAG,WAAW;EACpB,CAAC,MAAK,IAAGD,IAAI,KAAK,KAAK,EAAC;IACtBC,IAAI,GAAG,UAAU;EACnB,CAAC,MAAI;IACHA,IAAI,GAAG,IAAI;EACb;EAEA,MAAMC,QAAQ,GAAG;IACfC,KAAK,EAAG;EACV,CAAC;EAED,oBACER,OAAA;IAAKS,SAAS,EAAE,WAAW;IAAAC,QAAA,gBACzBV,OAAA;MAAKS,SAAS,EAAC,MAAM;MAAAC,QAAA,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACxCd,OAAA;MAAAU,QAAA,EAAK;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBd,OAAA;MAAAU,QAAA,EAAMP;IAAG;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAIfV,OAAO,IAAI,SAAS,EAKpBC,IAAI,KAAG,KAAK,gBACbL,OAAA;MAAAU,QAAA,EAAG;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBACdd,OAAA;MAAAU,QAAA,EAAG;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAGlBR,IAAI,eAELN,OAAA;MAAAU,QAAA,eAAGV,OAAA;QAAQe,OAAO,EAAEA,CAAA,KAAIC,KAAK,CAAC,WAAW,CAAE;QAAAN,QAAA,EAAC;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV;AAACG,EAAA,GA3CQhB,GAAG;AA6CZ,eAAeA,GAAG;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}